{"version":3,"sources":["../node_modules/prismjs/components/prism-core.js","../node_modules/prismjs/components/prism-clike.js","../node_modules/prismjs/components/prism-markup.js","../node_modules/prismjs/components/prism-javascript.js","../node_modules/prismjs/components/prism-css.js","../node_modules/prismjs/components/prism-typescript.js","../node_modules/prismjs/components/prism-jsx.js","../node_modules/prismjs/components/prism-tsx.js","../node_modules/prismjs/components/prism-json.js","../node_modules/prismjs/plugins/toolbar/prism-toolbar.js","../node_modules/prismjs/plugins/show-language/prism-show-language.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","docs/CodeBlock/CodeBlock.tsx","../node_modules/parcel-bundler/src/builtins/loaders/browser/js-loader.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","require","loadBundlesLazy","bundles","Array","isArray","id","length","Promise","resolve","code","LazyPromise","reject","loadBundles","slice","then","all","map","loadBundle","bundleLoaders","registerBundleLoader","type","loader","module","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","script","document","createElement","async","charset","src","onerror","onload","getElementsByTagName","appendChild"],"mappings":";;AAqtBA,IAAA,EAAA,UAAA,GArtBA,EAAA,oBAAA,OACA,OAEA,oBAAA,mBAAA,gBAAA,kBACA,KACA,GASA,EAAA,SAAA,GAGA,IAAA,EAAA,8BACA,EAAA,EAGA,EAAA,CACA,OAAA,EAAA,OAAA,EAAA,MAAA,OACA,4BAAA,EAAA,OAAA,EAAA,MAAA,4BACA,KAAA,CACA,OAAA,SAAA,EAAA,GACA,OAAA,aAAA,EACA,IAAA,EAAA,EAAA,KAAA,EAAA,EAAA,SAAA,EAAA,OACA,MAAA,QAAA,GACA,EAAA,IAAA,GAEA,EAAA,QAAA,KAAA,SAAA,QAAA,KAAA,QAAA,QAAA,UAAA,MAIA,KAAA,SAAA,GACA,OAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,IAGA,MAAA,SAAA,GAIA,OAHA,EAAA,MACA,OAAA,eAAA,EAAA,OAAA,CAAA,QAAA,IAEA,EAAA,MAIA,MAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,EAAA,EAAA,KAAA,KAAA,GAGA,OAFA,EAAA,GAAA,GAEA,GACA,IAAA,SAEA,GADA,EAAA,EAAA,KAAA,MAAA,GACA,EAAA,GACA,OAAA,EAAA,GAKA,IAAA,IAAA,KAHA,EAAA,GACA,EAAA,GAAA,EAEA,EACA,EAAA,eAAA,KACA,EAAA,GAAA,EAAA,EAAA,GAAA,IAIA,OAAA,EAEA,IAAA,QAEA,OADA,EAAA,EAAA,KAAA,MAAA,GACA,EAAA,GACA,EAAA,IAEA,EAAA,GACA,EAAA,GAAA,EAEA,EAAA,QAAA,SAAA,EAAA,GACA,EAAA,GAAA,EAAA,EAAA,KAGA,GAEA,QACA,OAAA,IAYA,YAAA,SAAA,GACA,KAAA,IAAA,EAAA,KAAA,EAAA,YACA,EAAA,EAAA,cAEA,OAAA,GACA,EAAA,UAAA,MAAA,IAAA,CAAA,CAAA,SAAA,GAAA,cAEA,QAUA,cAAA,WACA,GAAA,oBAAA,SACA,OAAA,KAEA,GAAA,kBAAA,SACA,OAAA,SAAA,cAOA,IACA,MAAA,IAAA,MACA,MAAA,GAQA,IAAA,GAAA,+BAAA,KAAA,EAAA,QAAA,IAAA,GACA,GAAA,EAAA,CACA,IAAA,EAAA,SAAA,qBAAA,UACA,IAAA,IAAA,KAAA,EACA,GAAA,EAAA,GAAA,KAAA,EACA,OAAA,EAAA,GAIA,OAAA,QAKA,UAAA,CACA,OAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,KAAA,MAAA,EAAA,UAAA,IAEA,IAAA,IAAA,KAAA,EACA,EAAA,GAAA,EAAA,GAGA,OAAA,GAYA,aAAA,SAAA,EAAA,EAAA,EAAA,GAEA,IAAA,GADA,EAAA,GAAA,EAAA,WACA,GACA,EAAA,GAEA,IAAA,IAAA,KAAA,EACA,GAAA,EAAA,eAAA,GAAA,CAEA,GAAA,GAAA,EACA,IAAA,IAAA,KAAA,EACA,EAAA,eAAA,KACA,EAAA,GAAA,EAAA,IAMA,EAAA,eAAA,KACA,EAAA,GAAA,EAAA,IAKA,IAAA,EAAA,EAAA,GAUA,OATA,EAAA,GAAA,EAGA,EAAA,UAAA,IAAA,EAAA,UAAA,SAAA,EAAA,GACA,IAAA,GAAA,GAAA,IACA,KAAA,GAAA,KAIA,GAIA,IAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAA,GAAA,GAEA,IAAA,EAAA,EAAA,KAAA,MAEA,IAAA,IAAA,KAAA,EACA,GAAA,EAAA,eAAA,GAAA,CACA,EAAA,KAAA,EAAA,EAAA,EAAA,GAAA,GAAA,GAEA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,KAAA,KAAA,GAEA,WAAA,GAAA,EAAA,EAAA,IAIA,UAAA,GAAA,EAAA,EAAA,MACA,EAAA,EAAA,KAAA,EACA,EAAA,EAAA,EAAA,EAAA,KALA,EAAA,EAAA,KAAA,EACA,EAAA,EAAA,EAAA,KAAA,OAUA,QAAA,GAEA,aAAA,SAAA,EAAA,GACA,EAAA,kBAAA,SAAA,EAAA,IAGA,kBAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,CACA,SAAA,EACA,UAAA,EACA,SAAA,oGAGA,EAAA,MAAA,IAAA,sBAAA,GAEA,EAAA,SAAA,MAAA,UAAA,MAAA,MAAA,EAAA,UAAA,iBAAA,EAAA,WAEA,EAAA,MAAA,IAAA,gCAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,SAAA,MACA,EAAA,iBAAA,GAAA,IAAA,EAAA,EAAA,WAIA,iBAAA,SAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,KAAA,YAAA,GACA,EAAA,EAAA,UAAA,GAGA,EAAA,UAAA,EAAA,UAAA,QAAA,EAAA,IAAA,QAAA,OAAA,KAAA,aAAA,EAGA,IAAA,EAAA,EAAA,WACA,GAAA,QAAA,EAAA,SAAA,gBACA,EAAA,UAAA,EAAA,UAAA,QAAA,EAAA,IAAA,QAAA,OAAA,KAAA,aAAA,GAGA,IAEA,EAAA,CACA,QAAA,EACA,SAAA,EACA,QAAA,EACA,KANA,EAAA,aASA,SAAA,EAAA,GACA,EAAA,gBAAA,EAEA,EAAA,MAAA,IAAA,gBAAA,GAEA,EAAA,QAAA,UAAA,EAAA,gBAEA,EAAA,MAAA,IAAA,kBAAA,GACA,EAAA,MAAA,IAAA,WAAA,GACA,GAAA,EAAA,KAAA,EAAA,SAKA,GAFA,EAAA,MAAA,IAAA,sBAAA,IAEA,EAAA,KAGA,OAFA,EAAA,MAAA,IAAA,WAAA,QACA,GAAA,EAAA,KAAA,EAAA,UAMA,GAFA,EAAA,MAAA,IAAA,mBAAA,GAEA,EAAA,QAKA,GAAA,GAAA,EAAA,OAAA,CACA,IAAA,EAAA,IAAA,OAAA,EAAA,UAEA,EAAA,UAAA,SAAA,GACA,EAAA,EAAA,OAGA,EAAA,YAAA,KAAA,UAAA,CACA,SAAA,EAAA,SACA,KAAA,EAAA,KACA,gBAAA,UAIA,EAAA,EAAA,UAAA,EAAA,KAAA,EAAA,QAAA,EAAA,gBAlBA,EAAA,EAAA,KAAA,OAAA,EAAA,QAsBA,UAAA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,CACA,KAAA,EACA,QAAA,EACA,SAAA,GAKA,OAHA,EAAA,MAAA,IAAA,kBAAA,GACA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,SACA,EAAA,MAAA,IAAA,iBAAA,GACA,EAAA,UAAA,EAAA,KAAA,OAAA,EAAA,QAAA,EAAA,WAGA,SAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,KACA,GAAA,EAAA,CACA,IAAA,IAAA,KAAA,EACA,EAAA,GAAA,EAAA,UAGA,EAAA,KAGA,IAAA,EAAA,IAAA,EAKA,OAJA,EAAA,EAAA,EAAA,KAAA,GA8FA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,IAAA,KAAA,EACA,GAAA,EAAA,eAAA,IAAA,EAAA,GAAA,CAIA,IAAA,EAAA,EAAA,GACA,EAAA,MAAA,QAAA,GAAA,EAAA,CAAA,GAEA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,CACA,GAAA,GAAA,GAAA,EAAA,IAAA,EACA,OAGA,IAAA,EAAA,EAAA,GACA,EAAA,EAAA,OACA,IAAA,EAAA,WACA,IAAA,EAAA,OACA,EAAA,EACA,EAAA,EAAA,MAEA,GAAA,IAAA,EAAA,QAAA,OAAA,CAEA,IAAA,EAAA,EAAA,QAAA,WAAA,MAAA,aAAA,GACA,EAAA,QAAA,OAAA,EAAA,QAAA,OAAA,EAAA,KAGA,EAAA,EAAA,SAAA,EAEA,IACA,IAAA,EAAA,EAAA,KAAA,EAAA,EACA,IAAA,EAAA,KACA,GAAA,EAAA,MAAA,OAAA,EAAA,EAAA,KACA,CAEA,IAAA,EAAA,EAAA,MAEA,GAAA,EAAA,OAAA,EAAA,OAEA,OAGA,KAAA,aAAA,GAAA,CAIA,IAAA,EAAA,EAEA,GAAA,GAAA,GAAA,EAAA,KAAA,KAAA,CACA,EAAA,UAAA,EACA,IAAA,EAAA,EAAA,KAAA,GACA,IAAA,EACA,MAGA,IAAA,EAAA,EAAA,OAAA,GAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GACA,EAAA,EAAA,MAAA,EAAA,GAAA,OACA,EAAA,EAIA,IADA,GAAA,EAAA,MAAA,OACA,GAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,MAAA,OAOA,GAJA,GAAA,EAAA,MAAA,OACA,EAAA,EAGA,EAAA,iBAAA,EACA,SAIA,IACA,IAAA,EAAA,EACA,IAAA,EAAA,OAAA,EAAA,GAAA,iBAAA,EAAA,QAAA,EAAA,KAAA,MAAA,QACA,EAAA,EAAA,KAEA,IACA,GAAA,EAAA,MAAA,OAEA,IAGA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,OAAA,MACA,CACA,EAAA,UAAA,EAEA,IAAA,EAAA,EAAA,KAAA,GAGA,GAAA,EAAA,CAQA,IACA,EAAA,EAAA,GAAA,EAAA,GAAA,OAAA,GAGA,IAAA,EAAA,EAAA,MAAA,EACA,EAAA,EAAA,GAAA,MAAA,GACA,EAAA,EAAA,EAAA,OACA,EAAA,EAAA,MAAA,EAAA,GACA,EAAA,EAAA,MAAA,GAEA,EAAA,EAAA,KAEA,IACA,EAAA,EAAA,EAAA,EAAA,GACA,GAAA,EAAA,QAGA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,SAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAWA,GAVA,EAAA,EAAA,EAAA,EAAA,GAEA,GACA,EAAA,EAAA,EAAA,GAIA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,IAAA,GAEA,EACA,WAtCA,GAAA,EACA,UA5LA,CAAA,EAAA,EAAA,EAAA,EAAA,KAAA,GAwSA,SAAA,GACA,IAAA,EAAA,GACA,EAAA,EAAA,KAAA,KACA,KAAA,IAAA,EAAA,MACA,EAAA,KAAA,EAAA,OACA,EAAA,EAAA,KAEA,OAAA,EA7SA,CAAA,IAGA,MAAA,CACA,IAAA,GAEA,IAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,MAAA,IAEA,EAAA,GAAA,EAAA,IAAA,GAEA,EAAA,GAAA,KAAA,IAGA,IAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,MAAA,IAAA,GAEA,GAAA,GAAA,EAAA,OAIA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,MACA,EAAA,KAKA,MAAA,GAKA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,KAAA,KAAA,EACA,KAAA,QAAA,EACA,KAAA,MAAA,EAEA,KAAA,OAAA,GAAA,GAAA,IAAA,OACA,KAAA,SAAA,EA0MA,SAAA,IAEA,IAAA,EAAA,CAAA,MAAA,KAAA,KAAA,KAAA,KAAA,MAEA,EAAA,CAAA,MAAA,KAAA,KAAA,EAAA,KAAA,MACA,EAAA,KAAA,EAGA,KAAA,KAAA,EAEA,KAAA,KAAA,EACA,KAAA,OAAA,EAWA,SAAA,EAAA,EAAA,EAAA,GAEA,IAAA,EAAA,EAAA,KAEA,EAAA,CAAA,MAAA,EAAA,KAAA,EAAA,KAAA,GAKA,OAJA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,SAEA,EASA,SAAA,EAAA,EAAA,EAAA,GAEA,IADA,IAAA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,GAAA,IAAA,EAAA,KAAA,IACA,EAAA,EAAA,KAEA,EAAA,KAAA,EACA,EAAA,KAAA,EACA,EAAA,QAAA,EAkBA,GAnRA,EAAA,MAAA,EAWA,EAAA,UAAA,SAAA,EAAA,EAAA,GACA,GAAA,iBAAA,EACA,OAAA,EAEA,GAAA,MAAA,QAAA,GAAA,CACA,IAAA,EAAA,GAIA,OAHA,EAAA,QAAA,SAAA,GACA,GAAA,EAAA,EAAA,KAEA,EAGA,IAAA,EAAA,CACA,KAAA,EAAA,KACA,QAAA,EAAA,EAAA,QAAA,GACA,IAAA,OACA,QAAA,CAAA,QAAA,EAAA,MACA,WAAA,GACA,SAAA,GAGA,EAAA,EAAA,MACA,IACA,MAAA,QAAA,GACA,MAAA,UAAA,KAAA,MAAA,EAAA,QAAA,GAEA,EAAA,QAAA,KAAA,IAIA,EAAA,MAAA,IAAA,OAAA,GAEA,IAAA,EAAA,GACA,IAAA,IAAA,KAAA,EAAA,WACA,GAAA,IAAA,EAAA,MAAA,EAAA,WAAA,IAAA,IAAA,QAAA,KAAA,UAAA,IAGA,MAAA,IAAA,EAAA,IAAA,WAAA,EAAA,QAAA,KAAA,KAAA,IAAA,EAAA,IAAA,EAAA,QAAA,KAAA,EAAA,IAAA,MAmOA,EAAA,SACA,OAAA,EAAA,kBAKA,EAAA,6BAEA,EAAA,iBAAA,UAAA,SAAA,GACA,IAAA,EAAA,KAAA,MAAA,EAAA,MACA,EAAA,EAAA,SACA,EAAA,EAAA,KACA,EAAA,EAAA,eAEA,EAAA,YAAA,EAAA,UAAA,EAAA,EAAA,UAAA,GAAA,IACA,GACA,EAAA,UAEA,GAGA,GAlBA,EAsBA,IAAA,EAAA,EAAA,KAAA,gBAUA,SAAA,IACA,EAAA,QACA,EAAA,eAIA,GAdA,IACA,EAAA,SAAA,EAAA,IAEA,EAAA,aAAA,iBACA,EAAA,QAAA,KAUA,EAAA,OAAA,CAOA,IAAA,EAAA,SAAA,WACA,YAAA,GAAA,gBAAA,GAAA,GAAA,EAAA,MACA,SAAA,iBAAA,mBAAA,GAEA,OAAA,sBACA,OAAA,sBAAA,GAEA,OAAA,WAAA,EAAA,IAKA,OAAA,EA3rBA,CA6rBA,GAEA,oBAAA,QAAA,OAAA,UACA,OAAA,QAAA,QAIA,IAAA,IACA,EAAA,MAAA;;ACntBA,MAAA,UAAA,MAAA,CACA,QAAA,CACA,CACA,QAAA,kCACA,YAAA,GAEA,CACA,QAAA,mBACA,YAAA,EACA,QAAA,IAGA,OAAA,CACA,QAAA,iDACA,QAAA,GAEA,aAAA,CACA,QAAA,2FACA,YAAA,EACA,OAAA,CACA,YAAA,UAGA,QAAA,6GACA,QAAA,qBACA,SAAA,YACA,OAAA,wDACA,SAAA,gDACA,YAAA;;AC5BA,MAAA,UAAA,OAAA,CACA,QAAA,kBACA,OAAA,iBACA,QAAA,CACA,QAAA,4GACA,QAAA,GAEA,MAAA,0BACA,IAAA,CACA,QAAA,yHACA,QAAA,EACA,OAAA,CACA,IAAA,CACA,QAAA,kBACA,OAAA,CACA,YAAA,QACA,UAAA,iBAGA,aAAA,CACA,QAAA,sCACA,OAAA,CACA,YAAA,CACA,KACA,CACA,QAAA,mBACA,YAAA,MAKA,YAAA,OACA,YAAA,CACA,QAAA,YACA,OAAA,CACA,UAAA,mBAMA,OAAA,qBAGA,MAAA,UAAA,OAAA,IAAA,OAAA,cAAA,OAAA,OACA,MAAA,UAAA,OAAA,OAGA,MAAA,MAAA,IAAA,OAAA,SAAA,GAEA,WAAA,EAAA,OACA,EAAA,WAAA,MAAA,EAAA,QAAA,QAAA,QAAA,QAIA,OAAA,eAAA,MAAA,UAAA,OAAA,IAAA,aAAA,CAYA,MAAA,SAAA,EAAA,GACA,IAAA,EAAA,GACA,EAAA,YAAA,GAAA,CACA,QAAA,oCACA,YAAA,EACA,OAAA,MAAA,UAAA,IAEA,EAAA,MAAA,uBAEA,IAAA,EAAA,CACA,iBAAA,CACA,QAAA,4BACA,OAAA,IAGA,EAAA,YAAA,GAAA,CACA,QAAA,UACA,OAAA,MAAA,UAAA,IAGA,IAAA,EAAA,GACA,EAAA,GAAA,CACA,QAAA,OAAA,mEAAA,OAAA,QAAA,MAAA,WAAA,OAAA,IAAA,KACA,YAAA,EACA,QAAA,EACA,OAAA,GAGA,MAAA,UAAA,aAAA,SAAA,QAAA,MAIA,MAAA,UAAA,IAAA,MAAA,UAAA,OAAA,SAAA,IACA,MAAA,UAAA,KAAA,MAAA,UAAA,OACA,MAAA,UAAA,OAAA,MAAA,UAAA,OACA,MAAA,UAAA,IAAA,MAAA,UAAA;;ACtGA,MAAA,UAAA,WAAA,MAAA,UAAA,OAAA,QAAA,CACA,aAAA,CACA,MAAA,UAAA,MAAA,cACA,CACA,QAAA,0FACA,YAAA,IAGA,QAAA,CACA,CACA,QAAA,kCACA,YAAA,GAEA,CACA,QAAA,uXACA,YAAA,IAGA,OAAA,gOAEA,SAAA,oFACA,SAAA,sFAGA,MAAA,UAAA,WAAA,cAAA,GAAA,QAAA,uEAEA,MAAA,UAAA,aAAA,aAAA,UAAA,CACA,MAAA,CACA,QAAA,2JACA,YAAA,EACA,QAAA,GAGA,oBAAA,CACA,QAAA,gKACA,MAAA,YAEA,UAAA,CACA,CACA,QAAA,wGACA,YAAA,EACA,OAAA,MAAA,UAAA,YAEA,CACA,QAAA,gDACA,OAAA,MAAA,UAAA,YAEA,CACA,QAAA,oDACA,YAAA,EACA,OAAA,MAAA,UAAA,YAEA,CACA,QAAA,qcACA,YAAA,EACA,OAAA,MAAA,UAAA,aAGA,SAAA,8BAGA,MAAA,UAAA,aAAA,aAAA,SAAA,CACA,kBAAA,CACA,QAAA,oEACA,QAAA,EACA,OAAA,CACA,uBAAA,CACA,QAAA,QACA,MAAA,UAEA,cAAA,CACA,QAAA,6DACA,YAAA,EACA,OAAA,CACA,4BAAA,CACA,QAAA,UACA,MAAA,eAEA,KAAA,MAAA,UAAA,aAGA,OAAA,cAKA,MAAA,UAAA,QACA,MAAA,UAAA,OAAA,IAAA,WAAA,SAAA,cAGA,MAAA,UAAA,GAAA,MAAA,UAAA;;CC1FA,SAAA,GAEA,IAAA,EAAA,gDAEA,EAAA,UAAA,IAAA,CACA,QAAA,mBACA,OAAA,CACA,QAAA,iCACA,OAAA,CACA,KAAA,WACA,6BAAA,CACA,QAAA,8EACA,YAAA,EACA,MAAA,cAKA,IAAA,CACA,QAAA,OAAA,YAAA,EAAA,OAAA,kBAAA,KACA,QAAA,EACA,OAAA,CACA,SAAA,QACA,YAAA,YAGA,SAAA,OAAA,wBAAA,EAAA,OAAA,kBACA,OAAA,CACA,QAAA,EACA,QAAA,GAEA,SAAA,+CACA,UAAA,gBACA,SAAA,oBACA,YAAA,aAGA,EAAA,UAAA,IAAA,OAAA,OAAA,KAAA,EAAA,UAAA,IAEA,IAAA,EAAA,EAAA,UAAA,OACA,IACA,EAAA,IAAA,WAAA,QAAA,OAEA,EAAA,UAAA,aAAA,SAAA,aAAA,CACA,aAAA,CACA,QAAA,6CACA,OAAA,CACA,YAAA,CACA,QAAA,aACA,OAAA,EAAA,IAAA,QAEA,YAAA,wBACA,aAAA,CACA,QAAA,MACA,OAAA,EAAA,UAAA,MAGA,MAAA,iBAEA,EAAA,MA3DA,CA8DA;;AC9DA,MAAA,UAAA,WAAA,MAAA,UAAA,OAAA,aAAA,CAEA,QAAA,qZACA,QAAA,0FAGA,MAAA,UAAA,GAAA,MAAA,UAAA;;CCNA,SAAA,GAEA,IAAA,EAAA,EAAA,KAAA,MAAA,EAAA,UAAA,YAEA,EAAA,UAAA,IAAA,EAAA,UAAA,OAAA,SAAA,GACA,EAAA,UAAA,IAAA,IAAA,QAAA,sMAEA,EAAA,UAAA,IAAA,IAAA,OAAA,IAAA,QAAA,kBACA,EAAA,UAAA,IAAA,IAAA,OAAA,cAAA,QAAA,yDACA,EAAA,UAAA,IAAA,IAAA,OAAA,IAAA,OAAA,cAAA,4BAEA,EAAA,UAAA,aAAA,SAAA,YAAA,CACA,OAAA,CACA,QAAA,sDACA,OAAA,CACA,YAAA,cACA,aAAA,SAGA,EAAA,UAAA,IAAA,KAEA,EAAA,UAAA,aAAA,SAAA,aAAA,CACA,OAAA,CAEA,QAAA,8CACA,OAAA,CACA,qBAAA,CACA,QAAA,UACA,MAAA,eAEA,KAAA,EAAA,UAAA,KAEA,MAAA,wBAEA,EAAA,UAAA,IAAA,KAGA,IAAA,EAAA,SAAA,GACA,OAAA,EAGA,iBAAA,EACA,EAEA,iBAAA,EAAA,QACA,EAAA,QAEA,EAAA,QAAA,IAAA,GAAA,KAAA,IARA,IAWA,EAAA,SAAA,GAEA,IADA,IAAA,EAAA,GACA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CACA,IAAA,EAAA,EAAA,GACA,GAAA,EAqCA,GAnCA,iBAAA,IACA,QAAA,EAAA,MAAA,EAAA,QAAA,IAAA,QAAA,EAAA,QAAA,GAAA,KAGA,OAAA,EAAA,QAAA,GAAA,QAAA,GAAA,QAEA,EAAA,OAAA,GAAA,EAAA,EAAA,OAAA,GAAA,UAAA,EAAA,EAAA,QAAA,GAAA,QAAA,KAEA,EAAA,MAGA,OAAA,EAAA,QAAA,EAAA,QAAA,OAAA,GAAA,SAIA,EAAA,KAAA,CACA,QAAA,EAAA,EAAA,QAAA,GAAA,QAAA,IACA,aAAA,IAIA,EAAA,OAAA,GAAA,gBAAA,EAAA,MAAA,MAAA,EAAA,QAGA,EAAA,EAAA,OAAA,GAAA,eAEA,EAAA,OAAA,GAAA,EAAA,EAAA,OAAA,GAAA,aAAA,GAAA,gBAAA,EAAA,MAAA,MAAA,EAAA,QAGA,EAAA,EAAA,OAAA,GAAA,eAGA,GAAA,IAGA,GAAA,iBAAA,IACA,EAAA,OAAA,GAAA,IAAA,EAAA,EAAA,OAAA,GAAA,aAAA,CAGA,IAAA,EAAA,EAAA,GAGA,EAAA,EAAA,OAAA,IAAA,iBAAA,EAAA,EAAA,IAAA,eAAA,EAAA,EAAA,GAAA,QACA,GAAA,EAAA,EAAA,EAAA,IACA,EAAA,OAAA,EAAA,EAAA,IAEA,EAAA,IAAA,iBAAA,EAAA,EAAA,IAAA,eAAA,EAAA,EAAA,GAAA,QACA,EAAA,EAAA,EAAA,EAAA,IAAA,EACA,EAAA,OAAA,EAAA,EAAA,GACA,KAGA,EAAA,GAAA,IAAA,EAAA,MAAA,aAAA,EAAA,KAAA,GAIA,EAAA,SAAA,iBAAA,EAAA,SACA,EAAA,EAAA,WAKA,EAAA,MAAA,IAAA,iBAAA,SAAA,GACA,QAAA,EAAA,UAAA,QAAA,EAAA,UAGA,EAAA,EAAA,UA1HA,CA6HA;;AC7HA,IAAA,EAAA,MAAA,KAAA,MAAA,MAAA,UAAA,YACA,MAAA,UAAA,IAAA,MAAA,UAAA,OAAA,MAAA;;ACDA,MAAA,UAAA,KAAA,CACA,SAAA,CACA,QAAA,gCACA,QAAA,GAEA,OAAA,CACA,QAAA,gCACA,QAAA,GAEA,QAAA,gCACA,OAAA,6BACA,YAAA,WACA,SAAA,IACA,QAAA,qBACA,KAAA,CACA,QAAA,WACA,MAAA;;;;CChBA,WACA,GAAA,oBAAA,MAAA,KAAA,OAAA,KAAA,SAAA,CAIA,IAAA,EAAA,GACA,EAAA,GACA,EAAA,aAEA,MAAA,QAAA,QAAA,GAgBA,IAAA,EAAA,MAAA,QAAA,QAAA,eAAA,SAAA,EAAA,GACA,IAAA,EAGA,EADA,mBAAA,EACA,EAEA,SAAA,GACA,IAAA,EAqBA,MAnBA,mBAAA,EAAA,UACA,EAAA,SAAA,cAAA,WACA,KAAA,SACA,EAAA,iBAAA,QAAA,WACA,EAAA,QAAA,KAAA,KAAA,MAEA,iBAAA,EAAA,KACA,EAAA,SAAA,cAAA,MACA,KAAA,EAAA,IAEA,EAAA,SAAA,cAAA,QAGA,EAAA,WACA,EAAA,UAAA,IAAA,EAAA,WAGA,EAAA,YAAA,EAAA,KAEA,GAIA,KAAA,EACA,QAAA,KAAA,mCAAA,EAAA,yBAIA,EAAA,KAAA,EAAA,GAAA,IA6BA,EAAA,MAAA,QAAA,QAAA,KAAA,SAAA,GAEA,IAAA,EAAA,EAAA,QAAA,WACA,GAAA,GAAA,OAAA,KAAA,EAAA,YAKA,EAAA,WAAA,UAAA,SAAA,gBAAA,CAKA,IAAA,EAAA,SAAA,cAAA,OACA,EAAA,UAAA,IAAA,gBACA,EAAA,WAAA,aAAA,EAAA,GACA,EAAA,YAAA,GAGA,IAAA,EAAA,SAAA,cAAA,OACA,EAAA,UAAA,IAAA,WAGA,IAAA,EAAA,EACA,EA5CA,SAAA,GACA,KAAA,GAAA,CACA,IAAA,EAAA,EAAA,aAAA,sBACA,GAAA,MAAA,EAEA,OADA,EAAA,EAAA,QACA,OACA,EAAA,MAAA,YAEA,GAGA,EAAA,EAAA,eAiCA,CAAA,EAAA,SACA,IACA,EAAA,EAAA,IAAA,SAAA,GACA,OAAA,EAAA,IAAA,KAIA,EAAA,QAAA,SAAA,GACA,IAAA,EAAA,EAAA,GAEA,GAAA,EAAA,CAIA,IAAA,EAAA,SAAA,cAAA,OACA,EAAA,UAAA,IAAA,gBAEA,EAAA,YAAA,GACA,EAAA,YAAA,MAIA,EAAA,YAAA,KAGA,EAAA,QAAA,SAAA,GACA,IAAA,EAAA,EAAA,QAAA,WACA,GAAA,GAAA,OAAA,KAAA,EAAA,WAIA,EAAA,aAAA,cAAA,CAIA,IAAA,EAAA,EACA,EAAA,EAAA,aAAA,cACA,IAEA,EAAA,SAAA,cAAA,YAAA,GACA,MAAA,IAeA,OAbA,EACA,EAAA,EAAA,SAEA,EAAA,aAAA,aACA,EAAA,SAAA,cAAA,MACA,KAAA,EAAA,aAAA,YAEA,EAAA,SAAA,cAAA,QAGA,EAAA,YAAA,GAGA,KAMA,MAAA,MAAA,IAAA,WAAA,IAhLA;;CCAA,WAEA,GAAA,oBAAA,MAAA,KAAA,OAAA,KAAA,SAIA,GAAA,MAAA,QAAA,QAAA,CAOA,IAAA,EAAA,CACA,KAAA,OACA,IAAA,MACA,IAAA,MACA,OAAA,SACA,IAAA,MACA,MAAA,SACA,GAAA,aACA,KAAA,OACA,KAAA,6BACA,OAAA,SACA,GAAA,SACA,WAAA,uBACA,IAAA,MACA,IAAA,MACA,KAAA,OACA,SAAA,WACA,KAAA,WACA,QAAA,gBACA,OAAA,eACA,WAAA,aACA,OAAA,SACA,MAAA,OACA,MAAA,QACA,OAAA,SACA,UAAA,SACA,IAAA,mBACA,KAAA,2BACA,KAAA,YACA,OAAA,KACA,GAAA,KACA,OAAA,KACA,IAAA,MACA,IAAA,MACA,OAAA,eACA,MAAA,QACA,IAAA,0BACA,aAAA,aACA,IAAA,MACA,OAAA,gBACA,OAAA,gBACA,gBAAA,gBACA,WAAA,gBACA,WAAA,SACA,KAAA,4BACA,IAAA,MACA,MAAA,0BACA,IAAA,MACA,gBAAA,gBACA,KAAA,gBACA,IAAA,gBACA,OAAA,KACA,2BAAA,2BACA,IAAA,+BACA,MAAA,SACA,SAAA,WACA,OAAA,SACA,KAAA,OACA,IAAA,qBACA,kBAAA,qBACA,QAAA,UACA,GAAA,UACA,IAAA,MACA,KAAA,OACA,KAAA,uBACA,KAAA,iCACA,UAAA,YACA,QAAA,WACA,QAAA,UACA,YAAA,eACA,eAAA,mBACA,GAAA,KACA,MAAA,QACA,YAAA,YACA,eAAA,eACA,KAAA,OACA,MAAA,QACA,MAAA,QACA,MAAA,QACA,IAAA,MACA,QAAA,UACA,SAAA,WACA,GAAA,WACA,MAAA,OACA,MAAA,OACA,aAAA,OACA,KAAA,UACA,QAAA,UACA,GAAA,WACA,oBAAA,oBACA,OAAA,SACA,IAAA,MACA,KAAA,aACA,KAAA,OACA,KAAA,OACA,MAAA,OACA,kBAAA,qBACA,KAAA,OACA,KAAA,OACA,MAAA,QACA,KAAA,OACA,WAAA,cACA,MAAA,QACA,OAAA,SACA,OAAA,UACA,aAAA,gBACA,OAAA,UACA,GAAA,UACA,IAAA,MACA,OAAA,SACA,aAAA,aACA,MAAA,SACA,WAAA,aACA,GAAA,aACA,QAAA,aACA,WAAA,aACA,WAAA,cACA,SAAA,mBACA,GAAA,SACA,EAAA,oBACA,IAAA,MACA,IAAA,YACA,IAAA,YACA,MAAA,SACA,KAAA,0BACA,eAAA,kBACA,MAAA,kBACA,GAAA,OACA,IAAA,MACA,KAAA,cACA,KAAA,cACA,gBAAA,gBACA,SAAA,sBACA,gBAAA,gBACA,IAAA,gBACA,IAAA,yBACA,OAAA,SACA,GAAA,SACA,aAAA,aACA,IAAA,oCACA,IAAA,MACA,IAAA,MACA,KAAA,OACA,IAAA,qBACA,KAAA,OACA,GAAA,aACA,QAAA,yBACA,GAAA,yBACA,QAAA,yBACA,gBAAA,gBACA,MAAA,SACA,KAAA,OACA,IAAA,MACA,eAAA,eACA,GAAA,eACA,KAAA,cACA,KAAA,cACA,UAAA,YACA,KAAA,mBACA,OAAA,SACA,KAAA,OACA,IAAA,QAGA,MAAA,QAAA,QAAA,eAAA,gBAAA,SAAA,GACA,IAAA,EAAA,EAAA,QAAA,WACA,GAAA,GAAA,OAAA,KAAA,EAAA,UAAA,CAiBA,IAPA,EAOA,EAAA,EAAA,aAAA,kBAAA,EAAA,EAAA,aAPA,EAOA,EAAA,WAHA,EAAA,UAAA,EAAA,GAAA,cAAA,EAAA,UAAA,IAAA,QAAA,aAAA,KAFA,GAOA,GAAA,EAAA,CAGA,IAAA,EAAA,SAAA,cAAA,QAGA,OAFA,EAAA,YAAA,EAEA,WArMA,QAAA,KAAA,uDAPA;;AGuBC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,kBAAA,EAAA,QAAA,aAAA,EAvBD,IAAA,EAAA,EAAA,QAAA,UAuBC,EAAA,EAAA,QAAA,kCAAA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GAAA,QAAA,kCAAA,QAAA,mCAAA,QAAA,uCAAA,QAAA,gCAAA,QAAA,uCAAA,QAAA,gCAAA,QAAA,gCAAA,QAAA,iCAAA,QAAA,6CAAA,QAAA,yCAAA,QAAA,qDAAA,QAAA,4BArBD,QAAA,qBACA,IAAM,EAAa,EAAM,QAAA,KAAK,WAAM,OAAA,QAAO,iBAAP,CAAO,QAAA,QAAA,mBAE5B,EAAA,SAAC,GAAE,IAAA,EAAA,EAAA,SAAU,EAAA,EAAA,UAAW,EAAA,EAAA,KACjC,EAAO,GAAY,GAEnB,OADA,GAAQ,EAAK,OAAM,EAAO,EAAK,QAC/B,EACK,EAAA,QAAA,cAAC,EAAU,CAAC,KAAM,IAEpB,EAAA,QAAA,cAAC,EAAiB,CAAC,UAAW,EAAW,KAAM,KAGlD,SAAU,EAAkB,GAAE,IAAA,EAAA,EAAA,KAAM,EAAA,EAAA,UAKtC,OAJI,EAAA,QAAA,UAAU,WACR,EAAA,QAAA,gBACL,CAAC,IAEF,EAAA,QAAA,cAAA,MAAA,CAAK,UAAU,gBACb,EAAA,QAAA,cAAA,OAAA,CAAM,UAAW,GAAY,IAGlC,QAAA,QAAA;;AFvBD,IAAIA,EAAY,KAChB,SAASC,IAKAD,OAJFA,IACHA,EAAYE,KAGPF,EAGT,SAASE,IAEH,IACI,MAAA,IAAIC,MACV,MAAOC,GACHC,IAAAA,GAAW,GAAKD,EAAIE,OAAOC,MAAM,iEACjCF,GAAAA,EACKG,OAAAA,EAAWH,EAAQ,IAIvB,MAAA,IAGT,SAASG,EAAWC,GACX,OAAC,GAAKA,GAAKC,QAAQ,wEAAwE,MAAQ,IAG5GC,QAAQT,aAAeD,EACvBU,QAAQH,WAAaA;;AC5BrB,IAAIN,EAAeU,QAAQ,gBAAgBV,aAE3C,SAASW,EAAgBC,GAClBC,MAAMC,QAAQF,KACjBA,EAAU,CAACA,IAGTG,IAAAA,EAAKH,EAAQA,EAAQI,OAAS,GAE9B,IACKC,OAAAA,QAAQC,QAAQR,QAAQK,IAC/B,MAAOb,GACHA,GAAa,qBAAbA,EAAIiB,KACC,OAAA,IAAIC,EAAY,SAAUF,EAASG,GACxCC,EAAYV,EAAQW,MAAM,GAAI,IAC3BC,KAAK,WACGd,OAAAA,QAAQK,KAEhBS,KAAKN,EAASG,KAIfnB,MAAAA,GAIV,SAASoB,EAAYV,GACZK,OAAAA,QAAQQ,IAAIb,EAAQc,IAAIC,IAGjC,IAAIC,EAAgB,GACpB,SAASC,EAAqBC,EAAMC,GAClCH,EAAcE,GAAQC,EAGxBC,OAAOvB,QAAUA,QAAUE,EAC3BF,QAAQwB,KAAOX,EACfb,QAAQyB,SAAWL,EAEnB,IAAIjB,EAAU,GACd,SAASe,EAAWQ,GACdpB,IAAAA,EAMAH,GALAC,MAAMC,QAAQqB,KAChBpB,EAAKoB,EAAO,GACZA,EAASA,EAAO,IAGdvB,EAAQuB,GACHvB,OAAAA,EAAQuB,GAGbL,IAAAA,GAAQK,EAAOC,UAAUD,EAAOE,YAAY,KAAO,EAAGF,EAAOnB,SAAWmB,GAAQG,cAChFC,EAAeX,EAAcE,GAC7BS,OAAAA,EACK3B,EAAQuB,GAAUI,EAAavC,IAAiBmC,GACpDX,KAAK,SAAUgB,GAKPA,OAJHA,GACFR,OAAOG,OAAOD,SAASnB,EAAIyB,GAGtBA,IACNC,MAAM,SAASC,GAGVA,aAFC9B,EAAQuB,GAETO,SAXRH,EAgBN,SAASnB,EAAYuB,GACdA,KAAAA,SAAWA,EACXC,KAAAA,QAAU,KAGjBxB,EAAYyB,UAAUrB,KAAO,SAAUsB,EAAWC,GAEzC,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAI3B,QAAQ,KAAK0B,WACpD,KAAKC,QAAQpB,KAAKsB,EAAWC,IAGtC3B,EAAYyB,UAAUJ,MAAQ,SAAUM,GAE/B,OADc,OAAjB,KAAKH,UAAkB,KAAKA,QAAU,IAAI3B,QAAQ,KAAK0B,WACpD,KAAKC,QAAQH,MAAMM;;AEjF5Bf,OAAOvB,QAAU,SAAsB0B,GAC9B,OAAA,IAAIlB,QAAQ,SAAUC,EAASG,GAChC2B,IAAAA,EAASC,SAASC,cAAc,UACpCF,EAAOG,OAAQ,EACfH,EAAOlB,KAAO,kBACdkB,EAAOI,QAAU,QACjBJ,EAAOK,IAAMlB,EACba,EAAOM,QAAU,SAAUZ,GACzBM,EAAOM,QAAUN,EAAOO,OAAS,KACjClC,EAAOqB,IAGTM,EAAOO,OAAS,WACdP,EAAOM,QAAUN,EAAOO,OAAS,KACjCrC,KAGF+B,SAASO,qBAAqB,QAAQ,GAAGC,YAAYT","file":"CodeBlock.1a42f6ca.js","sourceRoot":"..\\src","sourcesContent":["var _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t? self // if in worker\n\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n * MIT license http://www.opensource.org/licenses/mit-license.php/\n * @author Lea Verou http://lea.verou.me\n */\n\nvar Prism = (function (_self){\n\n// Private helper vars\nvar lang = /\\blang(?:uage)?-([\\w-]+)\\b/i;\nvar uniqueId = 0;\n\n\nvar _ = {\n\tmanual: _self.Prism && _self.Prism.manual,\n\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\tutil: {\n\t\tencode: function encode(tokens) {\n\t\t\tif (tokens instanceof Token) {\n\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\treturn tokens.map(encode);\n\t\t\t} else {\n\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t}\n\t\t},\n\n\t\ttype: function (o) {\n\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t},\n\n\t\tobjId: function (obj) {\n\t\t\tif (!obj['__id']) {\n\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t}\n\t\t\treturn obj['__id'];\n\t\t},\n\n\t\t// Deep clone a language definition (e.g. to extend it)\n\t\tclone: function deepClone(o, visited) {\n\t\t\tvar clone, id, type = _.util.type(o);\n\t\t\tvisited = visited || {};\n\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Object':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = {};\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tcase 'Array':\n\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t}\n\t\t\t\t\tclone = [];\n\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\to.forEach(function (v, i) {\n\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t});\n\n\t\t\t\t\treturn clone;\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn o;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t *\n\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t *\n\t\t * @param {Element} element\n\t\t * @returns {string}\n\t\t */\n\t\tgetLanguage: function (element) {\n\t\t\twhile (element && !lang.test(element.className)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\treturn (element.className.match(lang) || [, 'none'])[1].toLowerCase();\n\t\t\t}\n\t\t\treturn 'none';\n\t\t},\n\n\t\t/**\n\t\t * Returns the script element that is currently executing.\n\t\t *\n\t\t * This does __not__ work for line script element.\n\t\t *\n\t\t * @returns {HTMLScriptElement | null}\n\t\t */\n\t\tcurrentScript: function () {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif ('currentScript' in document) {\n\t\t\t\treturn document.currentScript;\n\t\t\t}\n\n\t\t\t// IE11 workaround\n\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t// this will not work for inline scripts\n\n\t\t\ttry {\n\t\t\t\tthrow new Error();\n\t\t\t} catch (err) {\n\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t// A stack will look like this:\n\t\t\t\t//\n\t\t\t\t// Error\n\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):.+:.+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\tif (src) {\n\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t},\n\n\tlanguages: {\n\t\textend: function (id, redef) {\n\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\tfor (var key in redef) {\n\t\t\t\tlang[key] = redef[key];\n\t\t\t}\n\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Insert a token before another token in a language literal\n\t\t * As this needs to recreate the object (we cannot actually insert before keys in object literals),\n\t\t * we cannot just provide an object, we need an object and a key.\n\t\t * @param inside The key (or language id) of the parent\n\t\t * @param before The key to insert before.\n\t\t * @param insert Object with the key/value pairs to insert\n\t\t * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.\n\t\t */\n\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\troot = root || _.languages;\n\t\t\tvar grammar = root[inside];\n\t\t\tvar ret = {};\n\n\t\t\tfor (var token in grammar) {\n\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar old = root[inside];\n\t\t\troot[inside] = ret;\n\n\t\t\t// Update references in other language definitions\n\t\t\t_.languages.DFS(_.languages, function(key, value) {\n\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\tthis[key] = ret;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn ret;\n\t\t},\n\n\t\t// Traverse a language definition with Depth First Search\n\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\tvisited = visited || {};\n\n\t\t\tvar objId = _.util.objId;\n\n\t\t\tfor (var i in o) {\n\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\tvar property = o[i],\n\t\t\t\t\t    propertyType = _.util.type(property);\n\n\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t}\n\t\t\t\t\telse if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {},\n\n\thighlightAll: function(async, callback) {\n\t\t_.highlightAllUnder(document, async, callback);\n\t},\n\n\thighlightAllUnder: function(container, async, callback) {\n\t\tvar env = {\n\t\t\tcallback: callback,\n\t\t\tcontainer: container,\n\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t};\n\n\t\t_.hooks.run('before-highlightall', env);\n\n\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\tfor (var i = 0, element; element = env.elements[i++];) {\n\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t}\n\t},\n\n\thighlightElement: function(element, async, callback) {\n\t\t// Find language\n\t\tvar language = _.util.getLanguage(element);\n\t\tvar grammar = _.languages[language];\n\n\t\t// Set language on the element, if not present\n\t\telement.className = element.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\n\t\t// Set language on the parent, for styling\n\t\tvar parent = element.parentNode;\n\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\tparent.className = parent.className.replace(lang, '').replace(/\\s+/g, ' ') + ' language-' + language;\n\t\t}\n\n\t\tvar code = element.textContent;\n\n\t\tvar env = {\n\t\t\telement: element,\n\t\t\tlanguage: language,\n\t\t\tgrammar: grammar,\n\t\t\tcode: code\n\t\t};\n\n\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t}\n\n\t\t_.hooks.run('before-sanity-check', env);\n\n\t\tif (!env.code) {\n\t\t\t_.hooks.run('complete', env);\n\t\t\tcallback && callback.call(env.element);\n\t\t\treturn;\n\t\t}\n\n\t\t_.hooks.run('before-highlight', env);\n\n\t\tif (!env.grammar) {\n\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\treturn;\n\t\t}\n\n\t\tif (async && _self.Worker) {\n\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\tworker.onmessage = function(evt) {\n\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t};\n\n\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\tlanguage: env.language,\n\t\t\t\tcode: env.code,\n\t\t\t\timmediateClose: true\n\t\t\t}));\n\t\t}\n\t\telse {\n\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t}\n\t},\n\n\thighlight: function (text, grammar, language) {\n\t\tvar env = {\n\t\t\tcode: text,\n\t\t\tgrammar: grammar,\n\t\t\tlanguage: language\n\t\t};\n\t\t_.hooks.run('before-tokenize', env);\n\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t_.hooks.run('after-tokenize', env);\n\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t},\n\n\ttokenize: function(text, grammar) {\n\t\tvar rest = grammar.rest;\n\t\tif (rest) {\n\t\t\tfor (var token in rest) {\n\t\t\t\tgrammar[token] = rest[token];\n\t\t\t}\n\n\t\t\tdelete grammar.rest;\n\t\t}\n\n\t\tvar tokenList = new LinkedList();\n\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\treturn toArray(tokenList);\n\t},\n\n\thooks: {\n\t\tall: {},\n\n\t\tadd: function (name, callback) {\n\t\t\tvar hooks = _.hooks.all;\n\n\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\thooks[name].push(callback);\n\t\t},\n\n\t\trun: function (name, env) {\n\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i=0, callback; callback = callbacks[i++];) {\n\t\t\t\tcallback(env);\n\t\t\t}\n\t\t}\n\t},\n\n\tToken: Token\n};\n\n_self.Prism = _;\n\nfunction Token(type, content, alias, matchedStr, greedy) {\n\tthis.type = type;\n\tthis.content = content;\n\tthis.alias = alias;\n\t// Copy of the full string this token was created from\n\tthis.length = (matchedStr || '').length|0;\n\tthis.greedy = !!greedy;\n}\n\nToken.stringify = function stringify(o, language) {\n\tif (typeof o == 'string') {\n\t\treturn o;\n\t}\n\tif (Array.isArray(o)) {\n\t\tvar s = '';\n\t\to.forEach(function (e) {\n\t\t\ts += stringify(e, language);\n\t\t});\n\t\treturn s;\n\t}\n\n\tvar env = {\n\t\ttype: o.type,\n\t\tcontent: stringify(o.content, language),\n\t\ttag: 'span',\n\t\tclasses: ['token', o.type],\n\t\tattributes: {},\n\t\tlanguage: language\n\t};\n\n\tvar aliases = o.alias;\n\tif (aliases) {\n\t\tif (Array.isArray(aliases)) {\n\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t} else {\n\t\t\tenv.classes.push(aliases);\n\t\t}\n\t}\n\n\t_.hooks.run('wrap', env);\n\n\tvar attributes = '';\n\tfor (var name in env.attributes) {\n\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t}\n\n\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n};\n\n/**\n * @param {string} text\n * @param {LinkedList<string | Token>} tokenList\n * @param {any} grammar\n * @param {LinkedListNode<string | Token>} startNode\n * @param {number} startPos\n * @param {boolean} [oneshot=false]\n * @param {string} [target]\n */\nfunction matchGrammar(text, tokenList, grammar, startNode, startPos, oneshot, target) {\n\tfor (var token in grammar) {\n\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvar patterns = grammar[token];\n\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\tif (target && target == token + ',' + j) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar pattern = patterns[j],\n\t\t\t\tinside = pattern.inside,\n\t\t\t\tlookbehind = !!pattern.lookbehind,\n\t\t\t\tgreedy = !!pattern.greedy,\n\t\t\t\tlookbehindLength = 0,\n\t\t\t\talias = pattern.alias;\n\n\t\t\tif (greedy && !pattern.pattern.global) {\n\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\tvar flags = pattern.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\tpattern.pattern = RegExp(pattern.pattern.source, flags + 'g');\n\t\t\t}\n\n\t\t\tpattern = pattern.pattern || pattern;\n\n\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t) {\n\n\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\n\t\t\t\tif (greedy && currentNode != tokenList.tail.prev) {\n\t\t\t\t\tpattern.lastIndex = pos;\n\t\t\t\t\tvar match = pattern.exec(text);\n\t\t\t\t\tif (!match) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar from = match.index + (lookbehind && match[1] ? match[1].length : 0);\n\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t}\n\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\tpos = p;\n\n\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\tfor (\n\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\tk !== tokenList.tail && (p < to || (typeof k.value === 'string' && !k.prev.value.greedy));\n\t\t\t\t\t\tk = k.next\n\t\t\t\t\t) {\n\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t}\n\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t// replace with the new match\n\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t} else {\n\t\t\t\t\tpattern.lastIndex = 0;\n\n\t\t\t\t\tvar match = pattern.exec(str);\n\t\t\t\t}\n\n\t\t\t\tif (!match) {\n\t\t\t\t\tif (oneshot) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (lookbehind) {\n\t\t\t\t\tlookbehindLength = match[1] ? match[1].length : 0;\n\t\t\t\t}\n\n\t\t\t\tvar from = match.index + lookbehindLength,\n\t\t\t\t\tmatch = match[0].slice(lookbehindLength),\n\t\t\t\t\tto = from + match.length,\n\t\t\t\t\tbefore = str.slice(0, from),\n\t\t\t\t\tafter = str.slice(to);\n\n\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\tif (before) {\n\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\tpos += before.length;\n\t\t\t\t}\n\n\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(match, inside) : match, alias, match, greedy);\n\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\tif (after) {\n\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t}\n\n\n\t\t\t\tif (removeCount > 1)\n\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, true, token + ',' + j);\n\n\t\t\t\tif (oneshot)\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @typedef LinkedListNode\n * @property {T} value\n * @property {LinkedListNode<T> | null} prev The previous node.\n * @property {LinkedListNode<T> | null} next The next node.\n * @template T\n */\n\n/**\n * @template T\n */\nfunction LinkedList() {\n\t/** @type {LinkedListNode<T>} */\n\tvar head = { value: null, prev: null, next: null };\n\t/** @type {LinkedListNode<T>} */\n\tvar tail = { value: null, prev: head, next: null };\n\thead.next = tail;\n\n\t/** @type {LinkedListNode<T>} */\n\tthis.head = head;\n\t/** @type {LinkedListNode<T>} */\n\tthis.tail = tail;\n\tthis.length = 0;\n}\n\n/**\n * Adds a new node with the given value to the list.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {T} value\n * @returns {LinkedListNode<T>} The added node.\n * @template T\n */\nfunction addAfter(list, node, value) {\n\t// assumes that node != list.tail && values.length >= 0\n\tvar next = node.next;\n\n\tvar newNode = { value: value, prev: node, next: next };\n\tnode.next = newNode;\n\tnext.prev = newNode;\n\tlist.length++;\n\n\treturn newNode;\n}\n/**\n * Removes `count` nodes after the given node. The given node will not be removed.\n * @param {LinkedList<T>} list\n * @param {LinkedListNode<T>} node\n * @param {number} count\n * @template T\n */\nfunction removeRange(list, node, count) {\n\tvar next = node.next;\n\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\tnext = next.next;\n\t}\n\tnode.next = next;\n\tnext.prev = node;\n\tlist.length -= i;\n}\n/**\n * @param {LinkedList<T>} list\n * @returns {T[]}\n * @template T\n */\nfunction toArray(list) {\n\tvar array = [];\n\tvar node = list.head.next;\n\twhile (node !== list.tail) {\n\t\tarray.push(node.value);\n\t\tnode = node.next;\n\t}\n\treturn array;\n}\n\n\nif (!_self.document) {\n\tif (!_self.addEventListener) {\n\t\t// in Node.js\n\t\treturn _;\n\t}\n\n\tif (!_.disableWorkerMessageHandler) {\n\t\t// In worker\n\t\t_self.addEventListener('message', function (evt) {\n\t\t\tvar message = JSON.parse(evt.data),\n\t\t\t\tlang = message.language,\n\t\t\t\tcode = message.code,\n\t\t\t\timmediateClose = message.immediateClose;\n\n\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\tif (immediateClose) {\n\t\t\t\t_self.close();\n\t\t\t}\n\t\t}, false);\n\t}\n\n\treturn _;\n}\n\n//Get current script and highlight\nvar script = _.util.currentScript();\n\nif (script) {\n\t_.filename = script.src;\n\n\tif (script.hasAttribute('data-manual')) {\n\t\t_.manual = true;\n\t}\n}\n\nfunction highlightAutomaticallyCallback() {\n\tif (!_.manual) {\n\t\t_.highlightAll();\n\t}\n}\n\nif (!_.manual) {\n\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t// See https://github.com/PrismJS/prism/issues/2102\n\tvar readyState = document.readyState;\n\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t} else {\n\t\tif (window.requestAnimationFrame) {\n\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t}\n\t}\n}\n\nreturn _;\n\n})(_self);\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n","Prism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|interface|extends|implements|trait|instanceof|new)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\\b/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'function': /\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n","Prism.languages.markup = {\n\t'comment': /<!--[\\s\\S]*?-->/,\n\t'prolog': /<\\?[\\s\\S]+?\\?>/,\n\t'doctype': {\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:(?!<!--)[^\"'\\]]|\"[^\"]*\"|'[^']*'|<!--[\\s\\S]*?-->)*\\]\\s*)?>/i,\n\t\tgreedy: true\n\t},\n\t'cdata': /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t/^=/,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': /&#?[\\da-z]{1,8};/i\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function(env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])[_$A-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\.(?:prototype|constructor))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|})\\s*)(?:catch|finally)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t'number': /\\b(?:(?:0[xX](?:[\\dA-Fa-f](?:_[\\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\\d(?:_\\d)?)+n|NaN|Infinity)\\b|(?:\\b(?:\\d(?:_\\d)?)+\\.?(?:\\d(?:_\\d)?)*|\\B\\.(?:\\d(?:_\\d)?)+)(?:[Ee][+-]?(?:\\d(?:_\\d)?)+)?/,\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&|\\|\\||[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?[.?]?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|interface|extends|implements|instanceof|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s])\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[gimyus]{0,6}(?=(?:\\s|\\/\\*[\\s\\S]*?\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n\t\tlookbehind: true,\n\t\tgreedy: true\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*)?\\s*\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /[_$a-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*(?=\\s*=>)/i,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:[_$A-Za-z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\s*)\\(\\s*)(?!\\s)(?:[^()]|\\([^()]*\\))+?(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\\${)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\${|}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t}\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","(function (Prism) {\n\n\tvar string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: /@[\\w-]+[\\s\\S]*?(?:;|(?=\\s*\\{))/,\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\((?!\\s*\\))\\s*)(?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))+?(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\tpattern: RegExp('url\\\\((?:' + string.source + '|[^\\n\\r()]*)\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/\n\t\t\t}\n\t\t},\n\t\t'selector': RegExp('[^{}\\\\s](?:[^{};\"\\']|' + string.source + ')*?(?=\\\\s*\\\\{)'),\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': /[-_a-z\\xA0-\\uFFFF][-\\w\\xA0-\\uFFFF]*(?=\\s*:)/i,\n\t\t'important': /!important\\b/i,\n\t\t'function': /[-a-z0-9]+(?=\\()/i,\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\n\t\tPrism.languages.insertBefore('inside', 'attr-value', {\n\t\t\t'style-attr': {\n\t\t\t\tpattern: /\\s*style=(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/i,\n\t\t\t\tinside: {\n\t\t\t\t\t'attr-name': {\n\t\t\t\t\t\tpattern: /^\\s*style/i,\n\t\t\t\t\t\tinside: markup.tag.inside\n\t\t\t\t\t},\n\t\t\t\t\t'punctuation': /^\\s*=\\s*['\"]|['\"]\\s*$/,\n\t\t\t\t\t'attr-value': {\n\t\t\t\t\t\tpattern: /.+/i,\n\t\t\t\t\t\tinside: Prism.languages.css\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talias: 'language-css'\n\t\t\t}\n\t\t}, markup.tag);\n\t}\n\n}(Prism));\n","Prism.languages.typescript = Prism.languages.extend('javascript', {\n\t// From JavaScript Prism keyword list and TypeScript language spec: https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#221-reserved-words\n\t'keyword': /\\b(?:abstract|as|async|await|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|is|keyof|let|module|namespace|new|null|of|package|private|protected|public|readonly|return|require|set|static|super|switch|this|throw|try|type|typeof|undefined|var|void|while|with|yield)\\b/,\n\t'builtin': /\\b(?:string|Function|any|number|boolean|Array|symbol|console|Promise|unknown|never)\\b/,\n});\n\nPrism.languages.ts = Prism.languages.typescript;\n","(function(Prism) {\n\nvar javascript = Prism.util.clone(Prism.languages.javascript);\n\nPrism.languages.jsx = Prism.languages.extend('markup', javascript);\nPrism.languages.jsx.tag.pattern= /<\\/?(?:[\\w.:-]+\\s*(?:\\s+(?:[\\w.:$-]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s{'\">=]+|\\{(?:\\{(?:\\{[^}]*\\}|[^{}])*\\}|[^{}])+\\}))?|\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}))*\\s*\\/?)?>/i;\n\nPrism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/i;\nPrism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">]+)/i;\nPrism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n\nPrism.languages.insertBefore('inside', 'attr-name', {\n\t'spread': {\n\t\tpattern: /\\{\\s*\\.{3}\\s*[a-z_$][\\w$]*(?:\\.[a-z_$][\\w$]*)*\\s*\\}/,\n\t\tinside: {\n\t\t\t'punctuation': /\\.{3}|[{}.]/,\n\t\t\t'attr-value': /\\w+/\n\t\t}\n\t}\n}, Prism.languages.jsx.tag);\n\nPrism.languages.insertBefore('inside', 'attr-value',{\n\t'script': {\n\t\t// Allow for two levels of nesting\n\t\tpattern: /=(?:\\{(?:\\{(?:\\{[^}]*\\}|[^}])*\\}|[^}])+\\})/i,\n\t\tinside: {\n\t\t\t'script-punctuation': {\n\t\t\t\tpattern: /^=(?={)/,\n\t\t\t\talias: 'punctuation'\n\t\t\t},\n\t\t\trest: Prism.languages.jsx\n\t\t},\n\t\t'alias': 'language-javascript'\n\t}\n}, Prism.languages.jsx.tag);\n\n// The following will handle plain text inside tags\nvar stringifyToken = function (token) {\n\tif (!token) {\n\t\treturn '';\n\t}\n\tif (typeof token === 'string') {\n\t\treturn token;\n\t}\n\tif (typeof token.content === 'string') {\n\t\treturn token.content;\n\t}\n\treturn token.content.map(stringifyToken).join('');\n};\n\nvar walkTokens = function (tokens) {\n\tvar openedTags = [];\n\tfor (var i = 0; i < tokens.length; i++) {\n\t\tvar token = tokens[i];\n\t\tvar notTagNorBrace = false;\n\n\t\tif (typeof token !== 'string') {\n\t\t\tif (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n\t\t\t\t// We found a tag, now find its kind\n\n\t\t\t\tif (token.content[0].content[0].content === '</') {\n\t\t\t\t\t// Closing tag\n\t\t\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n\t\t\t\t\t\t// Pop matching opening tag\n\t\t\t\t\t\topenedTags.pop();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (token.content[token.content.length - 1].content === '/>') {\n\t\t\t\t\t\t// Autoclosed tag, ignore\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Opening tag\n\t\t\t\t\t\topenedTags.push({\n\t\t\t\t\t\t\ttagName: stringifyToken(token.content[0].content[1]),\n\t\t\t\t\t\t\topenedBraces: 0\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n\n\t\t\t\t// Here we might have entered a JSX context inside a tag\n\t\t\t\topenedTags[openedTags.length - 1].openedBraces++;\n\n\t\t\t} else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n\n\t\t\t\t// Here we might have left a JSX context inside a tag\n\t\t\t\topenedTags[openedTags.length - 1].openedBraces--;\n\n\t\t\t} else {\n\t\t\t\tnotTagNorBrace = true\n\t\t\t}\n\t\t}\n\t\tif (notTagNorBrace || typeof token === 'string') {\n\t\t\tif (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n\t\t\t\t// Here we are inside a tag, and not inside a JSX context.\n\t\t\t\t// That's plain text: drop any tokens matched.\n\t\t\t\tvar plainText = stringifyToken(token);\n\n\t\t\t\t// And merge text with adjacent text\n\t\t\t\tif (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n\t\t\t\t\tplainText += stringifyToken(tokens[i + 1]);\n\t\t\t\t\ttokens.splice(i + 1, 1);\n\t\t\t\t}\n\t\t\t\tif (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n\t\t\t\t\tplainText = stringifyToken(tokens[i - 1]) + plainText;\n\t\t\t\t\ttokens.splice(i - 1, 1);\n\t\t\t\t\ti--;\n\t\t\t\t}\n\n\t\t\t\ttokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n\t\t\t}\n\t\t}\n\n\t\tif (token.content && typeof token.content !== 'string') {\n\t\t\twalkTokens(token.content);\n\t\t}\n\t}\n};\n\nPrism.hooks.add('after-tokenize', function (env) {\n\tif (env.language !== 'jsx' && env.language !== 'tsx') {\n\t\treturn;\n\t}\n\twalkTokens(env.tokens);\n});\n\n}(Prism));\n","var typescript = Prism.util.clone(Prism.languages.typescript);\nPrism.languages.tsx = Prism.languages.extend('jsx', typescript);","Prism.languages.json = {\n\t'property': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n\t\tgreedy: true\n\t},\n\t'string': {\n\t\tpattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n\t\tgreedy: true\n\t},\n\t'comment': /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t'number': /-?\\d+\\.?\\d*(?:e[+-]?\\d+)?/i,\n\t'punctuation': /[{}[\\],]/,\n\t'operator': /:/,\n\t'boolean': /\\b(?:true|false)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t}\n};\n","(function(){\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tvar callbacks = [];\n\tvar map = {};\n\tvar noop = function() {};\n\n\tPrism.plugins.toolbar = {};\n\n\t/**\n\t * @typedef ButtonOptions\n\t * @property {string} text The text displayed.\n\t * @property {string} [url] The URL of the link which will be created.\n\t * @property {Function} [onClick] The event listener for the `click` event of the created button.\n\t * @property {string} [className] The class attribute to include with element.\n\t */\n\n\t/**\n\t * Register a button callback with the toolbar.\n\t *\n\t * @param {string} key\n\t * @param {ButtonOptions|Function} opts\n\t */\n\tvar registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n\t\tvar callback;\n\n\t\tif (typeof opts === 'function') {\n\t\t\tcallback = opts;\n\t\t} else {\n\t\t\tcallback = function (env) {\n\t\t\t\tvar element;\n\n\t\t\t\tif (typeof opts.onClick === 'function') {\n\t\t\t\t\telement = document.createElement('button');\n\t\t\t\t\telement.type = 'button';\n\t\t\t\t\telement.addEventListener('click', function () {\n\t\t\t\t\t\topts.onClick.call(this, env);\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof opts.url === 'string') {\n\t\t\t\t\telement = document.createElement('a');\n\t\t\t\t\telement.href = opts.url;\n\t\t\t\t} else {\n\t\t\t\t\telement = document.createElement('span');\n\t\t\t\t}\n\n\t\t\t\tif (opts.className) {\n\t\t\t\t\telement.classList.add(opts.className);\n\t\t\t\t}\n\n\t\t\t\telement.textContent = opts.text;\n\n\t\t\t\treturn element;\n\t\t\t};\n\t\t}\n\n\t\tif (key in map) {\n\t\t\tconsole.warn('There is a button with the key \"' + key + '\" registered already.');\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(map[key] = callback);\n\t};\n\n\t/**\n\t * Returns the callback order of the given element.\n\t *\n\t * @param {HTMLElement} element\n\t * @returns {string[] | undefined}\n\t */\n\tfunction getOrder(element) {\n\t\twhile (element) {\n\t\t\tvar order = element.getAttribute('data-toolbar-order');\n\t\t\tif (order != null) {\n\t\t\t\torder = order.trim();\n\t\t\t\tif (order.length) {\n\t\t\t\t\treturn order.split(/\\s*,\\s*/g);\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t}\n\n\t/**\n\t * Post-highlight Prism hook callback.\n\t *\n\t * @param env\n\t */\n\tvar hook = Prism.plugins.toolbar.hook = function (env) {\n\t\t// Check if inline or actual code block (credit to line-numbers plugin)\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Autoloader rehighlights, so only do this once.\n\t\tif (pre.parentNode.classList.contains('code-toolbar')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create wrapper for <pre> to prevent scrolling toolbar with content\n\t\tvar wrapper = document.createElement('div');\n\t\twrapper.classList.add('code-toolbar');\n\t\tpre.parentNode.insertBefore(wrapper, pre);\n\t\twrapper.appendChild(pre);\n\n\t\t// Setup the toolbar\n\t\tvar toolbar = document.createElement('div');\n\t\ttoolbar.classList.add('toolbar');\n\n\t\t// order callbacks\n\t\tvar elementCallbacks = callbacks;\n\t\tvar order = getOrder(env.element);\n\t\tif (order) {\n\t\t\telementCallbacks = order.map(function (key) {\n\t\t\t\treturn map[key] || noop;\n\t\t\t});\n\t\t}\n\n\t\telementCallbacks.forEach(function(callback) {\n\t\t\tvar element = callback(env);\n\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = document.createElement('div');\n\t\t\titem.classList.add('toolbar-item');\n\n\t\t\titem.appendChild(element);\n\t\t\ttoolbar.appendChild(item);\n\t\t});\n\n\t\t// Add our toolbar to the currently created wrapper of <pre> tag\n\t\twrapper.appendChild(toolbar);\n\t};\n\n\tregisterButton('label', function(env) {\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pre.hasAttribute('data-label')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element, template;\n\t\tvar text = pre.getAttribute('data-label');\n\t\ttry {\n\t\t\t// Any normal text will blow up this selector.\n\t\t\ttemplate = document.querySelector('template#' + text);\n\t\t} catch (e) {}\n\n\t\tif (template) {\n\t\t\telement = template.content;\n\t\t} else {\n\t\t\tif (pre.hasAttribute('data-url')) {\n\t\t\t\telement = document.createElement('a');\n\t\t\t\telement.href = pre.getAttribute('data-url');\n\t\t\t} else {\n\t\t\t\telement = document.createElement('span');\n\t\t\t}\n\n\t\t\telement.textContent = text;\n\t\t}\n\n\t\treturn element;\n\t});\n\n\t/**\n\t * Register the toolbar with Prism.\n\t */\n\tPrism.hooks.add('complete', hook);\n})();\n","(function () {\n\n\tif (typeof self === 'undefined' || !self.Prism || !self.document) {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Show Languages plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\t// The languages map is built automatically with gulp\n\tvar Languages = /*languages_placeholder[*/{\n\t\t\"html\": \"HTML\",\n\t\t\"xml\": \"XML\",\n\t\t\"svg\": \"SVG\",\n\t\t\"mathml\": \"MathML\",\n\t\t\"css\": \"CSS\",\n\t\t\"clike\": \"C-like\",\n\t\t\"js\": \"JavaScript\",\n\t\t\"abap\": \"ABAP\",\n\t\t\"abnf\": \"Augmented Backus–Naur form\",\n\t\t\"antlr4\": \"ANTLR4\",\n\t\t\"g4\": \"ANTLR4\",\n\t\t\"apacheconf\": \"Apache Configuration\",\n\t\t\"apl\": \"APL\",\n\t\t\"aql\": \"AQL\",\n\t\t\"arff\": \"ARFF\",\n\t\t\"asciidoc\": \"AsciiDoc\",\n\t\t\"adoc\": \"AsciiDoc\",\n\t\t\"asm6502\": \"6502 Assembly\",\n\t\t\"aspnet\": \"ASP.NET (C#)\",\n\t\t\"autohotkey\": \"AutoHotkey\",\n\t\t\"autoit\": \"AutoIt\",\n\t\t\"shell\": \"Bash\",\n\t\t\"basic\": \"BASIC\",\n\t\t\"bbcode\": \"BBcode\",\n\t\t\"shortcode\": \"BBcode\",\n\t\t\"bnf\": \"Backus–Naur form\",\n\t\t\"rbnf\": \"Routing Backus–Naur form\",\n\t\t\"conc\": \"Concurnas\",\n\t\t\"csharp\": \"C#\",\n\t\t\"cs\": \"C#\",\n\t\t\"dotnet\": \"C#\",\n\t\t\"cpp\": \"C++\",\n\t\t\"cil\": \"CIL\",\n\t\t\"coffee\": \"CoffeeScript\",\n\t\t\"cmake\": \"CMake\",\n\t\t\"csp\": \"Content-Security-Policy\",\n\t\t\"css-extras\": \"CSS Extras\",\n\t\t\"dax\": \"DAX\",\n\t\t\"django\": \"Django/Jinja2\",\n\t\t\"jinja2\": \"Django/Jinja2\",\n\t\t\"dns-zone-file\": \"DNS zone file\",\n\t\t\"dns-zone\": \"DNS zone file\",\n\t\t\"dockerfile\": \"Docker\",\n\t\t\"ebnf\": \"Extended Backus–Naur form\",\n\t\t\"ejs\": \"EJS\",\n\t\t\"etlua\": \"Embedded Lua templating\",\n\t\t\"erb\": \"ERB\",\n\t\t\"excel-formula\": \"Excel Formula\",\n\t\t\"xlsx\": \"Excel Formula\",\n\t\t\"xls\": \"Excel Formula\",\n\t\t\"fsharp\": \"F#\",\n\t\t\"firestore-security-rules\": \"Firestore security rules\",\n\t\t\"ftl\": \"FreeMarker Template Language\",\n\t\t\"gcode\": \"G-code\",\n\t\t\"gdscript\": \"GDScript\",\n\t\t\"gedcom\": \"GEDCOM\",\n\t\t\"glsl\": \"GLSL\",\n\t\t\"gml\": \"GameMaker Language\",\n\t\t\"gamemakerlanguage\": \"GameMaker Language\",\n\t\t\"graphql\": \"GraphQL\",\n\t\t\"hs\": \"Haskell\",\n\t\t\"hcl\": \"HCL\",\n\t\t\"http\": \"HTTP\",\n\t\t\"hpkp\": \"HTTP Public-Key-Pins\",\n\t\t\"hsts\": \"HTTP Strict-Transport-Security\",\n\t\t\"ichigojam\": \"IchigoJam\",\n\t\t\"inform7\": \"Inform 7\",\n\t\t\"javadoc\": \"JavaDoc\",\n\t\t\"javadoclike\": \"JavaDoc-like\",\n\t\t\"javastacktrace\": \"Java stack trace\",\n\t\t\"jq\": \"JQ\",\n\t\t\"jsdoc\": \"JSDoc\",\n\t\t\"js-extras\": \"JS Extras\",\n\t\t\"js-templates\": \"JS Templates\",\n\t\t\"json\": \"JSON\",\n\t\t\"jsonp\": \"JSONP\",\n\t\t\"json5\": \"JSON5\",\n\t\t\"latex\": \"LaTeX\",\n\t\t\"tex\": \"TeX\",\n\t\t\"context\": \"ConTeXt\",\n\t\t\"lilypond\": \"LilyPond\",\n\t\t\"ly\": \"LilyPond\",\n\t\t\"emacs\": \"Lisp\",\n\t\t\"elisp\": \"Lisp\",\n\t\t\"emacs-lisp\": \"Lisp\",\n\t\t\"llvm\": \"LLVM IR\",\n\t\t\"lolcode\": \"LOLCODE\",\n\t\t\"md\": \"Markdown\",\n\t\t\"markup-templating\": \"Markup templating\",\n\t\t\"matlab\": \"MATLAB\",\n\t\t\"mel\": \"MEL\",\n\t\t\"moon\": \"MoonScript\",\n\t\t\"n1ql\": \"N1QL\",\n\t\t\"n4js\": \"N4JS\",\n\t\t\"n4jsd\": \"N4JS\",\n\t\t\"nand2tetris-hdl\": \"Nand To Tetris HDL\",\n\t\t\"nasm\": \"NASM\",\n\t\t\"neon\": \"NEON\",\n\t\t\"nginx\": \"nginx\",\n\t\t\"nsis\": \"NSIS\",\n\t\t\"objectivec\": \"Objective-C\",\n\t\t\"ocaml\": \"OCaml\",\n\t\t\"opencl\": \"OpenCL\",\n\t\t\"parigp\": \"PARI/GP\",\n\t\t\"objectpascal\": \"Object Pascal\",\n\t\t\"pcaxis\": \"PC-Axis\",\n\t\t\"px\": \"PC-Axis\",\n\t\t\"php\": \"PHP\",\n\t\t\"phpdoc\": \"PHPDoc\",\n\t\t\"php-extras\": \"PHP Extras\",\n\t\t\"plsql\": \"PL/SQL\",\n\t\t\"powerquery\": \"PowerQuery\",\n\t\t\"pq\": \"PowerQuery\",\n\t\t\"mscript\": \"PowerQuery\",\n\t\t\"powershell\": \"PowerShell\",\n\t\t\"properties\": \".properties\",\n\t\t\"protobuf\": \"Protocol Buffers\",\n\t\t\"py\": \"Python\",\n\t\t\"q\": \"Q (kdb+ database)\",\n\t\t\"qml\": \"QML\",\n\t\t\"jsx\": \"React JSX\",\n\t\t\"tsx\": \"React TSX\",\n\t\t\"renpy\": \"Ren'py\",\n\t\t\"rest\": \"reST (reStructuredText)\",\n\t\t\"robotframework\": \"Robot Framework\",\n\t\t\"robot\": \"Robot Framework\",\n\t\t\"rb\": \"Ruby\",\n\t\t\"sas\": \"SAS\",\n\t\t\"sass\": \"Sass (Sass)\",\n\t\t\"scss\": \"Sass (Scss)\",\n\t\t\"shell-session\": \"Shell session\",\n\t\t\"solidity\": \"Solidity (Ethereum)\",\n\t\t\"solution-file\": \"Solution file\",\n\t\t\"sln\": \"Solution file\",\n\t\t\"soy\": \"Soy (Closure Template)\",\n\t\t\"sparql\": \"SPARQL\",\n\t\t\"rq\": \"SPARQL\",\n\t\t\"splunk-spl\": \"Splunk SPL\",\n\t\t\"sqf\": \"SQF: Status Quo Function (Arma 3)\",\n\t\t\"sql\": \"SQL\",\n\t\t\"tap\": \"TAP\",\n\t\t\"toml\": \"TOML\",\n\t\t\"tt2\": \"Template Toolkit 2\",\n\t\t\"trig\": \"TriG\",\n\t\t\"ts\": \"TypeScript\",\n\t\t\"t4-cs\": \"T4 Text Templates (C#)\",\n\t\t\"t4\": \"T4 Text Templates (C#)\",\n\t\t\"t4-vb\": \"T4 Text Templates (VB)\",\n\t\t\"t4-templating\": \"T4 templating\",\n\t\t\"vbnet\": \"VB.Net\",\n\t\t\"vhdl\": \"VHDL\",\n\t\t\"vim\": \"vim\",\n\t\t\"visual-basic\": \"Visual Basic\",\n\t\t\"vb\": \"Visual Basic\",\n\t\t\"wasm\": \"WebAssembly\",\n\t\t\"wiki\": \"Wiki markup\",\n\t\t\"xeoracube\": \"XeoraCube\",\n\t\t\"xojo\": \"Xojo (REALbasic)\",\n\t\t\"xquery\": \"XQuery\",\n\t\t\"yaml\": \"YAML\",\n\t\t\"yml\": \"YAML\"\n\t}/*]*/;\n\n\tPrism.plugins.toolbar.registerButton('show-language', function (env) {\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t/**\n\t\t * Tries to guess the name of a language given its id.\n\t\t *\n\t\t * @param {string} id The language id.\n\t\t * @returns {string}\n\t\t */\n\t\tfunction guessTitle(id) {\n\t\t\tif (!id) {\n\t\t\t\treturn id;\n\t\t\t}\n\t\t\treturn (id.substring(0, 1).toUpperCase() + id.substring(1)).replace(/s(?=cript)/, 'S');\n\t\t}\n\n\t\tvar language = pre.getAttribute('data-language') || Languages[env.language] || guessTitle(env.language);\n\n\t\tif (!language) {\n\t\t\treturn;\n\t\t}\n\t\tvar element = document.createElement('span');\n\t\telement.textContent = language;\n\n\t\treturn element;\n\t});\n\n})();\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","import React from \"react\";\r\nimport Prism from \"prismjs\";\r\nimport \"./prism.light.css\";\r\nconst Playground = React.lazy(() => import(\"./Playground\"));\r\n\r\nexport default ({ children, className, live }) => {\r\n  let code = children || \"\";\r\n  if (code && code.trim) code = code.trim();\r\n  if (live) {\r\n    return <Playground code={code}></Playground>;\r\n  }\r\n  return <SyntaxHighlighter className={className} code={code} />;\r\n};\r\n\r\nexport function SyntaxHighlighter({ code, className }) {\r\n  React.useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, [code]);\r\n  return (\r\n    <pre className=\"line-numbers\">\r\n      <code className={className}>{code}</code>\r\n    </pre>\r\n  );\r\n}\r\n","module.exports = function loadJSBundle(bundle) {\n  return new Promise(function (resolve, reject) {\n    var script = document.createElement('script');\n    script.async = true;\n    script.type = 'text/javascript';\n    script.charset = 'utf-8';\n    script.src = bundle;\n    script.onerror = function (e) {\n      script.onerror = script.onload = null;\n      reject(e);\n    };\n\n    script.onload = function () {\n      script.onerror = script.onload = null;\n      resolve();\n    };\n\n    document.getElementsByTagName('head')[0].appendChild(script);\n  });\n};\n"]}